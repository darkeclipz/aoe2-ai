;The purpose of this AI is to write an extremely thoroughly documented AI for
;training purposes.
;
;Author:       BearTheGreat
;Last Updated: Feb. 8, 2007
;
;PREREQUISITES:  Be comfortable with the concepts in Training1.per.  They will
;not necessarily be repeated in this AI, but any new changes will be noted with
;"New in Training2".  Hang on.  There are a lot of lessons in this AI.
;
;New in Training2:
;
;In my opinion, and there are excellent scripters that disagree, the best order
;for an AI file is the following:
;
; 1. Defconst Rules.  Constants must be defined before they can be used in
;    rules or else they will generate an error message, so they really need to
;    be at the top of the file.
; 2. Starting Strategic Numbers.  Strategic numbers really can go anywhere in 
;    the file, but I tend to put the ones defined early in the game at this
;    location in the list.
; 3. Market Rules.  Put them here so you can buy or sell items as needed for
;    research items.
; 4. Economy Rules (i.e. - Gatherer Rules)  They could really go anywhere.  I 
;    just choose to put them here.
; 5. Research Rules.  I think it is very important to put these before the
;    training rules so you don't end up with lots of un-upgraded units.
; 6. Escrow Rules - It is best to place these after the research rules because
;    escrow is usually held for research items.  It is nice to know when it can
;    be released.
; 7. Build Rules - I find it very necessary to build before training so that I
;    will have the resources to build.
; 8. Training Rules.  I usually train civilian units first to keep the economy
;    humming.
; 9. Taunting Rules.
; 10.Resignation Rules.  These really could go anywhere in the file.
; 11.Town-Size Rules.  These could also go anywhere.
; 12.Defend Rules.  These could also go anywhere.
; 13.Counter-Attack Rules.  These could also go anywhere.
; 14.Attack Rules.  These could also go anywhere.
;
; I didn't realize I had so many divisions till I wrote them down!  The rules
; from Training1 will be reorganized into this order.

;******************************************************************************
;
; Defconst Rules - New in Training2
;
;******************************************************************************
;
;There are two large advantages to defining constants.  One is that it makes
;the script easier to read.  The other is that it makes the script easier to
;modify.  Let's settle in on some conventions.  All goal numbers will be 
;preceded by "g-", all goal values will be preceded by "gv-".  All regular
;constants will not be preceded by either.

;Need to set a limit on the number of Dark Age Villagers.  Otherwise it will 
;take too long to get out of the Dark Age!

(defconst max-num-dark-villagers 30) 

;It is useful to know your age status for many reasons.

(defconst g-age-status 1) ;Goal 1
(defconst gv-dark-age 0)
(defconst gv-advancing-to-feudal 1)
(defconst gv-feudal-age 2)
(defconst gv-advancing-to-castle 3)
(defconst gv-castle-age 4)
(defconst gv-advancing-to-imperial 5)
(defconst gv-imperial-age 6)

;The following will also prove valuable for a number of future goals

(defconst gv-off 0)
(defconst gv-on 1)
(defconst gv-no 0)
(defconst gv-yes 1)

(defrule
   (true)
   =>
   (set-goal g-age-status gv-dark-age)
   (disable-self)
)

;******************************************************************************
;
; Starting Strategic Numbers
;
;******************************************************************************

;New in Training2 - I'm putting these here because I only want them to fire 
;once.  I got some of them from the lumber camp placement and the initial 
;exploration rules below.  Others are new, but they are explained.

(defrule
   (true)
   =>
   (set-strategic-number sn-camp-max-distance 8)
   (set-strategic-number sn-initial-exploration-required 0)
   (set-strategic-number sn-food-dropsite-distance -1)
   (set-strategic-number sn-wood-dropsite-distance -1)
;Next two strategic numbers are set to try to get first mining camp at gold.
;Like many things in the game, it is not 100%, but I would say it works over 
;90% of the time.
   (set-strategic-number sn-stone-dropsite-distance 100)
   (set-strategic-number sn-gold-dropsite-distance 35)
   (disable-self)
)

;******************************************************************************
;
; Market Rules
;
;******************************************************************************

;******************************************************************************
;
; Economy Rules
;
;******************************************************************************

(defrule
   (goal g-age-status gv-dark-age) ;New in Training2
   =>
   (set-strategic-number sn-food-gatherer-percentage 60)
   (set-strategic-number sn-wood-gatherer-percentage 40)
   (set-strategic-number sn-gold-gatherer-percentage 0)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

;While advancing to Feudal Age, wood for buildings is suddenly very
;important.  Switch more villagers to wood.  A very useful fact for setting 
;gatherer percentages is that the last valid rule in the file is the one
;that will be implemented.  The AI can read through several valid rules.
;It will only implement the last valid rule.  I'm tipping my hand a little
;by building a barracks.  We're headed for a man-at-arms rush!

(defrule
   (goal g-age-status gv-advancing-to-feudal)  ;New in Training2
   =>
   (set-strategic-number sn-food-gatherer-percentage 40)
   (set-strategic-number sn-wood-gatherer-percentage 50)
   (set-strategic-number sn-gold-gatherer-percentage 10)
   (set-strategic-number sn-stone-gatherer-percentage 0)
)

;******************************************************************************
;
; Research Rules
;
;******************************************************************************

;New in Training2 - Occassionally the age research misfires.  It is not 
;frequent, but it can really derail your AI when it happens, so let's be 
;prepared to catch it.  Now note that we put the catch above the research rule
;so that it will be read in the next rule pass after the research rule fires.
;This will prevent false misfire alerts.

(defrule                                      ;New in Training2
   (goal g-age-status gv-advancing-to-feudal)
   (research-available feudal-age)
   =>
   (chat-to-allies "Age research misfire!")
   (set-goal g-age-status gv-dark-age)
)

(defrule
   (can-research feudal-age)
   =>
   (research feudal-age)
   (set-goal g-age-status gv-advancing-to-feudal) ;New in Training2
   (chat-to-allies "Researching Feudal Age")      ;New in Training2
)

(defrule                        ;New in Training2
   (current-age == feudal-age)
   =>
   (set-goal g-age-status gv-feudal-age)
   (disable-self)
)

(defrule                                      ;New in Training2
   (goal g-age-status gv-advancing-to-castle)
   (research-available castle-age)
   =>
   (chat-to-allies "Age research misfire!")
   (set-goal g-age-status gv-feudal-age)
)

(defrule
   (can-research castle-age)
   =>
   (research castle-age)
   (set-goal g-age-status gv-advancing-to-castle) ;New in Training2
   (chat-to-allies "Researching Castle Age")      ;New in Training2
)

(defrule                       ;New in Training2
   (current-age == castle-age)
   =>
   (set-goal g-age-status gv-castle-age)
   (disable-self)
)

(defrule                                        ;New in Training2
   (goal g-age-status gv-advancing-to-imperial)
   (research-available imperial-age)
   =>
   (chat-to-allies "Age research misfire!")
   (set-goal g-age-status gv-castle-age)
)

(defrule
   (can-research imperial-age)
   =>
   (research imperial-age)
   (set-goal g-age-status gv-advancing-to-imperial) ;New in Training2
   (chat-to-allies "Researching Imperial Age")      ;New in Training2
)

(defrule                         ;New in Training2
   (current-age == imperial-age)
   =>
   (set-goal g-age-status gv-imperial-age)
   (disable-self)
)

(defrule
   (food-amount < 50)
   (can-research ri-loom)
   =>
   (research ri-loom)
   (chat-to-allies "Researching loom.") ;New in Training2
)

;******************************************************************************
;
; Escrow Rules
;
;******************************************************************************

;******************************************************************************
;
; Build Rules
;
;******************************************************************************

#load-if-not-defined HUN-CIV

(defrule
   (housing-headroom < 4)
   (population-headroom > 3)
   (can-build house)
   =>
   (build house)
)

#end-if


;New in Training2 - Remember, I said strategic numbers can be modified or
;placed anywhere in the file that they make sense.  I'm putting the explorer
;rules here because I sort of view them as a precursor to building the mill.
;As a refinement to what we did with these rules in Training1, let's stop 
;searching for berries if we find sheep.  But if we eat all the sheep let's
;look for the berries again.

(defrule
   (sheep-and-forage-too-far)
   (not(resource-found food)) ;Haven't found the berries yet.
   =>
   (set-strategic-number sn-percent-civilian-explorers 100)
   (set-strategic-number sn-minimum-civilian-explorers 100)
   (set-strategic-number sn-cap-civilian-explorers 100)
   (set-strategic-number sn-total-number-explorers 101)
   (set-strategic-number sn-number-explore-groups 101)
   (set-strategic-number sn-minimum-explore-group-size 1)
   (set-strategic-number sn-maximum-explore-group-size 1)
)

(defrule
   (or(not(sheep-and-forage-too-far))
      (resource-found food))
   =>
   (set-strategic-number sn-percent-civilian-explorers 0)
   (set-strategic-number sn-minimum-civilian-explorers 0)
   (set-strategic-number sn-cap-civilian-explorers 0)
   (set-strategic-number sn-total-number-explorers 1)
   (set-strategic-number sn-number-explore-groups 1)
)

;New in Training2 - Removed the (disable-self) at the end of the above rules.
;You now have more than one opportunity to find those berries!

;Now let's build a mill.

(defrule
   (or(building-type-count-total house > 0) ;Start first house before mill.
      (civ-selected hun))                   ;Unless you're a Hun.
   (building-type-count-total mill < 1)
   (resource-found food)
   (can-build mill)
   =>
   (build mill)
)

;Now we'll try to also build a lumber camp.  The default strategic numbers do
;not always work well for the initial camp placement, so hang with me here.
;I copied the following from Elite Raider and it hardly ever fails on a
;standard map.

;START of first lumber camp placement rules.

;The theory is that the amount of time it takes for your scout to see trees is
;related to how far away they are from your camp.

(defrule
   (resource-found wood)
   (strategic-number sn-camp-max-distance == 8)
   (game-time < 4)
   =>
   (set-strategic-number sn-camp-max-distance 11)
   (chat-local-to-self "Camp distance 11.")
   (disable-self)
)

(defrule
   (resource-found wood)
   (strategic-number sn-camp-max-distance == 8)
   (game-time < 7)
   =>
   (set-strategic-number sn-camp-max-distance 13)
   (chat-local-to-self "Camp distance 13.")
   (disable-self)
)

(defrule
   (resource-found wood)
   (strategic-number sn-camp-max-distance == 8)
   (game-time < 12)
   =>
   (set-strategic-number sn-camp-max-distance 15)
   (chat-local-to-self "Camp distance 15.")
   (disable-self)
)

(defrule
   (resource-found wood)
   (strategic-number sn-camp-max-distance == 8)
   (game-time < 16)
   =>
   (set-strategic-number sn-camp-max-distance 17)
   (chat-local-to-self "Camp distance 17.")
   (disable-self)
)

(defrule
   (resource-found wood)
   (strategic-number sn-camp-max-distance == 8)
   (game-time < 25)
   =>
   (set-strategic-number sn-camp-max-distance 20)
   (chat-local-to-self "Camp distance 20.")
   (disable-self)
)

(defrule
   (resource-found wood)
   (strategic-number sn-camp-max-distance == 8)
   (game-time > 25)
   =>
   (set-strategic-number sn-camp-max-distance 22)
   (chat-local-to-self "Camp distance 22.")
   (disable-self)
)

;I added the next two rules as acts of desperation.  They rarely fire on a
;standard map.

(defrule
   (current-age == dark-age)
   (wood-amount > 200)
   (population > 19)
   (building-type-count-total lumber-camp == 0)
   =>
   (set-strategic-number sn-camp-max-distance 35)
   (chat-to-allies "Wood further away than 22 tiles!")
   (chat-local-to-self "Camp distance 35.")
   (disable-self)
)

(defrule
   (current-age == dark-age)
   (wood-amount > 200)
   (population > 21)
   (building-type-count-total lumber-camp == 0)
   =>
   (set-strategic-number sn-camp-max-distance 45)
   (chat-to-allies "Wood further away than 35 tiles!")
   (chat-local-to-self "Camp distance 45.")
   (disable-self)
)

;END of first lumber camp placement rules

;Now that we've hopefully found the trees at a reasonable distance
;from the town center, let's build that lumber camp.

(defrule
   (current-age == dark-age)
   (building-type-count-total mill > 0)
   (resource-found wood)
   (building-type-count-total lumber-camp < 1)
   (can-build lumber-camp)
   =>
   (build lumber-camp)
)

;New in Training2
;I found a minimum camp-max-distance of 35 is needed to be sure you can build
;your first mining camp at a gold mine.  Sometimes a smaller number will do,
;but it is better to set it at a value that works almost everytime and not
;worry about it.

(defrule
   (building-type-count-total lumber-camp > 0)
   (strategic-number sn-camp-max-distance < 35)
   =>
   (set-strategic-number sn-camp-max-distance 35)
   (chat-local-to-self "Camp distance 35.")
   (disable-self)
)

(defrule
   (or(current-age > dark-age)
      (goal g-age-status gv-advancing-to-feudal)) ;New in Training2
   (resource-found gold)
   (building-type-count mining-camp < 4)
   (cc-players-unit-type-count 0 66 > 0)
   (dropsite-min-distance gold > 5)
   (dropsite-min-distance gold < 255)
   (can-build mining-camp)
   =>
   (build mining-camp)
)

;New in Training2 - Hopefully the first mining camp went at a gold mine.  Now
;enable camps to stone mines as well.  I think I learned this trick from 
;Hector, but I'm not sure.  I've slept since then.

(defrule
   (building-type-count-total mining-camp > 0)
   (dropsite-min-distance gold <= 5)
   =>
   (set-strategic-number sn-gold-dropsite-distance -1)
   (set-strategic-number sn-stone-dropsite-distance -1)
   (disable-self)
)

(defrule
   (or(current-age > dark-age)
      (goal g-age-status gv-advancing-to-feudal))  ;New in Training2
   (building-type-count-total mining-camp > 0)
   (building-type-count-total barracks < 2)
   (can-build barracks)
   =>
   (build barracks)
)

(defrule
   (goal g-age-status gv-dark-age)     ;New in Training2
   (building-type-count-total mill > 0)
   (building-type-count-total lumber-camp > 0)
   (or(building-type-count-total farm < 15)
      (idle-farm-count == 0))
   (can-build farm)
   =>
   (build farm)
)

(defrule
   (or(current-age > dark-age)
      (goal g-age-status gv-advancing-to-feudal))  ;New in Training2
   (idle-farm-count == 0)
   (can-build farm)
   =>
   (build farm)
)


;******************************************************************************
;
; Training Rules
;
;******************************************************************************

(defrule
   (current-age == dark-age) ;New in Training2
   (unit-type-count-total villager < max-num-dark-villagers) ;New in Training2
   (can-train villager)
   =>
   (train villager)
)

(defrule                     ;New in Training2
   (current-age > dark-age) 
   (unit-type-count-total villager < 100)
   (can-train villager)
   =>
   (train villager)
)

(defrule
   (goal g-age-status gv-advancing-to-feudal)  ;New in Training2
   (can-train militiaman-line)
   =>
   (train militiaman-line)
)

;******************************************************************************
;
; Taunting Rules
;
;******************************************************************************

;******************************************************************************
;
; Resignation Rules
;
;******************************************************************************

;******************************************************************************
;
; Town-Size Rules
;
;******************************************************************************

;******************************************************************************
;
; Defend Rules
;
;******************************************************************************

;******************************************************************************
;
; Counter-Attack Rules
;
;******************************************************************************

;******************************************************************************
;
; Attack Rules
;
;******************************************************************************







